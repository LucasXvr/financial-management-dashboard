@inherits LayoutComponentBase

<MudThemeProvider @ref="_mudThemeProvider" @bind-IsDarkMode="_isDarkMode" Theme="Configuration.Theme" />
<MudSnackbarProvider />
<MudDialogProvider />

<MudLayout>
    <MudAppBar Color="Color.Primary">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start"
            OnClick="ToggleDrawer" />
        <MudText Typo="Typo.h6" Class="ml-2">FinTrack</MudText>
        <MudSpacer />
        <MudButton Href="/lancamentos/novo" Variant="Variant.Text" StartIcon="@Icons.Material.Filled.Add">
            NOVO LANÇAMENTO
        </MudButton>
        <MudSpacer />
        <MudSwitch Color="Color.Primary" @bind-Value="_isDarkMode" ThumbIcon="@Icons.Material.Filled.Brightness4" />
    </MudAppBar>

    <MudDrawer @bind-Open="@_isDrawerOpened">
        <NavMenu />
    </MudDrawer>

    <MudMainContent>
        <MudContainer Class="mt-4">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    private bool _isDrawerOpened = true;
    private bool _isDarkMode = true;
    private MudThemeProvider _mudThemeProvider = null!;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _isDarkMode = await _mudThemeProvider.GetSystemPreference();
            await _mudThemeProvider.WatchSystemPreference(OnSystemPreferenceChanged);
            StateHasChanged();
        }
    }

    private Task OnSystemPreferenceChanged(bool newValue)
    {
        _isDarkMode = newValue;
        StateHasChanged();
        return Task.CompletedTask;
    }

    private void ToggleDrawer() => _isDrawerOpened = !_isDrawerOpened;
}